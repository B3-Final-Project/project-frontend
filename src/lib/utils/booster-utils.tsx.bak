import { RelationshipTypeEnum } from "@/lib/routes/profiles/enums";
import { FaStar } from 'react-icons/fa';
import { GiGrass, GiMetalBar, GiPerspectiveDiceSixFacesRandom, GiRock, GiWaterDrop } from 'react-icons/gi';

export const getBoosterIcon = (type: RelationshipTypeEnum, packName: string) => {
  if (packName.toLowerCase().includes('water')) {
    return <GiWaterDrop className="text-4xl text-blue-500" />;
  } else if (packName.toLowerCase().includes('grass')) {
    return <GiGrass className="text-4xl text-emerald-700" />;
  } else if (packName.toLowerCase().includes('rock')) {
    return <GiRock className="text-4xl text-amber-700" />;
  } else if (packName.toLowerCase().includes('metal')) {
    return <GiMetalBar className="text-4xl text-gray-400" />;
  } else if (packName.toLowerCase().includes('random')) {
    return <GiPerspectiveDiceSixFacesRandom className="text-4xl text-purple-500" />;
  }

  switch (type) {
    case RelationshipTypeEnum.CASUAL:
      return <GiWaterDrop className="text-4xl text-blue-500" />;
    case RelationshipTypeEnum.LONG_TERM:
      return <GiRock className="text-4xl text-amber-700" />;
    case RelationshipTypeEnum.MARRIAGE:
      return <GiMetalBar className="text-4xl text-gray-400" />;
    case RelationshipTypeEnum.FRIENDSHIP:
      return <GiGrass className="text-4xl text-emerald-700" />;
    case RelationshipTypeEnum.UNSURE:
      return <GiPerspectiveDiceSixFacesRandom className="text-4xl text-purple-500" />;
    case RelationshipTypeEnum.ANY:
      return <FaStar className="text-4xl text-amber-400" />;
    default:
      return <FaStar className="text-4xl text-amber-400" />;
  }
};

export const getBoosterBackgroundColor = (type: RelationshipTypeEnum, packName: string): string => {
  if (packName.toLowerCase().includes('water')) {
    return 'bg-blue-500';
  } else if (packName.toLowerCase().includes('grass')) {
    return 'bg-emerald-700';
  } else if (packName.toLowerCase().includes('rock')) {
    return 'bg-amber-700';
  } else if (packName.toLowerCase().includes('metal')) {
    return 'bg-gray-600';
  } else if (packName.toLowerCase().includes('random')) {
    return 'bg-purple-500';
  }

  switch (type) {
    case RelationshipTypeEnum.CASUAL:
      return 'bg-blue-500';
    case RelationshipTypeEnum.LONG_TERM:
      return 'bg-amber-700';
    case RelationshipTypeEnum.MARRIAGE:
      return 'bg-gray-600';
    case RelationshipTypeEnum.FRIENDSHIP:
      return 'bg-emerald-700';
    case RelationshipTypeEnum.UNSURE:
      return 'bg-purple-500';
    case RelationshipTypeEnum.ANY:
      return 'bg-amber-400';
    default:
      return 'bg-primary';
  }
};
